// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/janekbaraniewski/kubeserial/pkg/apis/app/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KubeSerialLister helps list KubeSerials.
type KubeSerialLister interface {
	// List lists all KubeSerials in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.KubeSerial, err error)
	// KubeSerials returns an object that can list and get KubeSerials.
	KubeSerials(namespace string) KubeSerialNamespaceLister
	KubeSerialListerExpansion
}

// kubeSerialLister implements the KubeSerialLister interface.
type kubeSerialLister struct {
	indexer cache.Indexer
}

// NewKubeSerialLister returns a new KubeSerialLister.
func NewKubeSerialLister(indexer cache.Indexer) KubeSerialLister {
	return &kubeSerialLister{indexer: indexer}
}

// List lists all KubeSerials in the indexer.
func (s *kubeSerialLister) List(selector labels.Selector) (ret []*v1alpha1.KubeSerial, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KubeSerial))
	})
	return ret, err
}

// KubeSerials returns an object that can list and get KubeSerials.
func (s *kubeSerialLister) KubeSerials(namespace string) KubeSerialNamespaceLister {
	return kubeSerialNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KubeSerialNamespaceLister helps list and get KubeSerials.
type KubeSerialNamespaceLister interface {
	// List lists all KubeSerials in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.KubeSerial, err error)
	// Get retrieves the KubeSerial from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.KubeSerial, error)
	KubeSerialNamespaceListerExpansion
}

// kubeSerialNamespaceLister implements the KubeSerialNamespaceLister
// interface.
type kubeSerialNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KubeSerials in the indexer for a given namespace.
func (s kubeSerialNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.KubeSerial, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KubeSerial))
	})
	return ret, err
}

// Get retrieves the KubeSerial from the indexer for a given namespace and name.
func (s kubeSerialNamespaceLister) Get(name string) (*v1alpha1.KubeSerial, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("kubeserial"), name)
	}
	return obj.(*v1alpha1.KubeSerial), nil
}
